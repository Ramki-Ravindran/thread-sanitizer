#summary Runtime flags.

Runtime flags are passed via TSAN_OPTIONS environment variable, separate flags are separated with spaces, e.g.:
{{{
$ TSAN_OPTIONS="history_size=7 force_seq_cst_atomics=1" ./myprogram
}}}

|| Flag name || Default value || Description ||
|| report_bugs || 1 || Turns off bug reporting entirely (useful for benchmarking). ||
|| report_thread_leaks || 1 || Report thread leaks at exit? ||
|| report_destroy_locked || 1 || Report destruction of a locked mutex? ||
|| report_signal_unsafe|| 1 || Report violations of async signal-safety (e.g. malloc() call from a signal handler). ||
|| history size || 2 || Per-thread history size, controls how many previous memory accesses are remembered per thread.  Possible values are [0..7].  history_size=0 amounts to 32K memory accesses.  Each next value doubles the amount of memory accesses, up to history_size=7 that amounts to 4M memory accesses.  The default value is 2 (128K memory accesses).  If you consistently see only one stack trace in reports, you may try increasing the value of the flag but keep in mind that it increases memory consumption. ||
|| force_seq_cst_atomics || 0 || This flag turns all atomic operations into sequentially consistent operations.  This is useful to check whether a race is caused by incorrect memory ordering or not. ||
|| strip_path_prefix || || Strip that prefix from file paths in reports. ||
|| suppressions || || Suppressions filename (TODO describe suppressions file format). ||
|| exitcode || 66 || Override exit status of the process if something was reported. ||
|| log_path || stderr || Write logs to "log_path.pid".  The special values are "stdout" and "stderr". ||
|| atexit_sleep_ms || 1000 || Sleep in main thread before exiting for that many milliseconds.  Useful to catch "at exit" races. ||
|| verbosity || 0 || Verbosity level (0 - silent, 1 - a bit of output, 2+ - more output). ||
|| flush_memory_ms || 0 || Flush information about previous memory accesses every X ms.  This can dramatically reduce memory consumption, but we observed false reports when the flag is set (seemingly to a bug in Linux kernel).  Also note that data races with flushed accesses can not be detected.  Reasonable values are 1000-20000 (1-20 seconds) depending on how quickly the program grows memory consumption. ||
|| external_symbolizer_path || || Path to external symbolizer (TODO say how to build). ||